
@import "shared/color"; // Need to import shared colours explicitly

// Opacity constants
// ------------------------------------------------------------------

$dmOPa: 5%;
$dmOPb: 15%;
$dmOPc: 30%;
$dmOPd: 50%;
$dmOPe: 75%;
$dmOPf: 90%;

// Shades
// ------------------------------------------------------------------

// usage e.g: color: shade(example, light);
$shades: (
    dmByers: (
      Lightest: lighten($dmByers, 30%),
      Light:    lighten($dmByers, 10%)
    ),
    dmEleven: (
      Lightest: lighten($dmEleven, 30%),
      Light:    lighten($dmEleven, 10%)
    ),
    dmWheeler: (
      Dark:     darken($dmWheeler, 22%),
      Darkest:  darken($dmWheeler, 30%)
    ),
    dmHopper: (
      Dark:     darken($dmHopper, 10%),
      Darkest:  darken($dmHopper, 30%)
    ),
    dmMayfield: (
      Dark:     darken($dmMayfield, 10%),
      Darkest:  darken($dmMayfield, 30%)
    ),
    dmHargrove: (
      Dark:     darken($dmHargrove, 3%)
    )
);

@function shade($palette, $tone) {
    @return map-get(map-get($shades, $palette), $tone);
}


// Assign colours from variables in shared/color.scss
// ------------------------------------------------------------------


// Roles
$dmPrime: 					$dmHenderson;
$dmPrimeAccent: 		shade(dmByers, Light);
$dmSecondary:       $dmEleven;
$dmSecondaryAccent: shade(dmMayfield, Dark);
$dmTertiary:        $dmSinclair;
$dmTertiaryAccent:  shade(dmWheeler, Dark);

// Actions
$dmAction: 					$dmSecondary;
$dmActionRespond: 	$dmWheeler;
$dmActionVisited:   shade(dmByers, Light);

// Default text colors
$dmHeadings: 				$dmByers;
$dmText: 						$dmHolland;

// Misc. color assignments
$dmBorder:          shade(dmHargrove, Dark);
$dmDisabled: 				$dmHawkins;
$dmScrollbar: 			$dmPrime;

// Non-brand feedbacks
$dmError: 					#B10E1E;
$dmSuccess: 				#00823B;
$dmAlert: 					#FFBF47;
